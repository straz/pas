<html>
<head>


<title>Bogus Payback:Easy Answers Create Long-Term Problems</title>
</head>

<body bgcolor="#FFFFFF">
<p>
<p>
<h2>Bogus Payback:<br>Easy Answers Create Long-Term Problems</h2>

<b>by Paul A. Strassmann<br><br>
Computerworld</b><br>
February 2, 1998<hr>


<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=480>

<tr><td>



When you carry out a return-on-investment (ROI) analysis, is it an
exercise in financial analysis or spin control? To justify spending on
information technologies, IS managers frequently resort to bogus
comparisons. Though such claims may sound superficially convincing, in
due course the fallacious thinking behind them becomes transparent.
When that happens, it diminishes the credibility of everyone who
promotes worthy innovation.<P>

The most frequent example of that sort of reasoning is comparing
computerized work with the identical work done by hand. For example,
the CIO of an insurance company would show how much staff would have
to be added to issue insurance policies without the system he's
advocating.<P>

This method is not only bad reasoning but also bad economics. What's
really going on here? In effect, a CIO would calculate the ROI by
assuming that all computers in the company have suddenly ceased to
function. The ROI would be the ratio of the increased costs for a
fictional staff divided by the actual costs for real IT spending. It's
always a very large number, which gives the proponents a great deal of
satisfaction.<P>

I'm not using a ridiculous example to demonstrate foolishness. There
are numerous books, including a cost-justification manual published by
a major vendor, that suggest using such ratios to justify asking for
real money. Some widely quoted cases using such reasoning come up with
returns of more than 10,000%. But that's making false promises based
on false premises. It's comparing the economics of a current
technology with imaginary labor costs or an obsolete technology.<P>

If you tried to cost-justify buying a 460-horsepower Mercedes
automobile by comparing it with the cost of owning 460 horses, you'd
be laughed at. It's obvious you have to compare the cost of one
automotive technology - a Mercedes - with other cars that use the
latest technology, such as a Lexus, a Lincoln or even a Honda. Yet in
the IT world, I continue to find that IS managers, when judging
computer applications, are comparing cars with horses. Top management
is catching up to such deceptions and starting to demand proof that
they will realize plenty of real cash in return for cash spent on
IT.<P>

<h3>The ROI of Two-Digit Negligence</h3>

This well-entrenched but erroneous way of looking at ROI may have
contributed to the year 2000 crisis. Experts who regard the $300
billion-plus cost of fixing the year 2000 problem as an unavoidable
cost rather than the huge foul-up it really is use this misleading
line of reasoning.<P>

The apologists' argument starts with the observation that the physical
limitations of punched cards required conservation of column space on
an 80-hole card. That limitation was finally overcome with the
introduction of disk storage.<P>

Next, the apologists say that in 1963 disk storage cost $10,600 per
megabyte per year, making the cost of storing the extra two digits
prohibitive. Clearly, the old-timers were wise to keep the size of the
computer records to a minimum; a large corporation could avoid
spending several hundred million dollars on costly disk space over 35
years.<P>

Using that logic, the big fix-up bill now coming due seems to make
perfectly good economic sense. The problem is that despite the
smoothness of the exculpation claims, we're back to comparing a
Mercedes with horses. The economics-made-me-do-it arguments don't hold
up:<P>

<ol>

<li>It isn't true that in 1963 the alternative to punched cards was
mainframe disk memory. The fact is that with completely negligible
exceptions, all computer records that didn't remain on cards were kept
on magnetic tapes. The cost of a 2,400-ft. reel of 1,600 bit/in.
magnetic tape in those days was less than $20, or a mere $0.0000069444
for two digits. That's less than $6 per megabyte for a one-time cost,
not $10,600.<P>

<li>In fact, disk storage in 1963 didn't cost $10,600 per megabyte.
The actual cost was about $2,000. The calculations of the payoffs from
deferring year 2000 fixes restated 1963 costs in terms of 1995
inflation-adjusted dollars. That's achieved by applying to 1963 prices
a multiplier concocted by the U.S. Bureau of Labor Statistics. That
adjustment is based on a ratio of the prices of old technology
compared with current prices. I have examined that ratio and found it
to be a figment of a bureaucrat's imagination. It's like increasing
the size of a weak horse fivefold so that it can run in competition
with a much faster horse.<p>

Decisions can't be made in retrospect. Therefore, the act of omitting
two digits from archival storage can be evaluated only in terms of
actual 1963 cash economics and not by making comparisons with 1995
possibilities.<P>

<li>It's grossly misleading to justify delaying year 2000 conversion
work because disks were expensive 35 years ago. For a typical
corporation, software maintenance costs range from 20% to 30% of
annual spending for software. That implies an average software life
expectancy of less than five years. Each organization had at least six
chances to make the necessary year 2000 repairs as a by-product of
regular software maintenance, at a low cost, instead of deferring it
until the bills accumulated.<P>

</ol>

<h3>Implications for CIOs</h3>

Every week, I find new examples of questionable economic reasoning
being applied to decisions about computer spending. You can find these
examples in magazines, reports and vendor claims.<P>

CIOs shouldn't go along, through temptation or ignorance, with these
pseudo-ROI methods. They may have to devote more time to finding out
how to distinguish between easy answers and sound financial analysis.
Success as a CIO is likely to depend more on one's credibility as an
investor who can deliver identifiable cash results than on one's
talents as a financial spin doctor. Conjectures won't stand up.<p>

<hr>

<font size="-1">

Paul A. Strassmann (<a
href="http://www.strassmann.com">www.strassmann.com</a>) is Chairman
and CEO of the <a href="http://www.stacorp.com">Software Testing
Assurance Corporation</a>, dedicated to verification and validation of
claims about Y2000 readiness.</font><p>

</td></tr>
</table>

<!--#include file="cw98-footer.shtml"-->
